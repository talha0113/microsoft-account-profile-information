parameters:
- name: name
  type: string
  default: ''
- name: display_name
  type: string
  default: ''
- name: depends_on
  type: string
  default: ''
- name: environment_name
  type: string
  default: ''
- name: branch_name
  type: string
  default: 'main'
- name: main_project
  type: string
  default: ''

stages:

- stage: ${{ parameters.name }}
  displayName: ${{ parameters.display_name }}
  dependsOn: ${{ parameters.depends_on }}
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.branch_name }}'))
  variables:
  - name: DropRoot 
    value: '$(Pipeline.Workspace)/drop'  

  jobs:
  
  - deployment: ${{ replace(parameters.main_project, '.', '_') }}
    displayName: ${{ parameters.main_project }}
    environment: ${{ format('{0}', parameters.environment_name) }}
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: 'false'

    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureFunctionApp@2
            displayName: 'Azure Function'
            inputs:
              connectedServiceNameARM: ${{ format('{0}', parameters.environment_name) }}
              appType: 'functionAppLinux'
              appName: ${{ format('{0}', replace(parameters.environment_name, 'app', 'func')) }}
              package: '$(DropRoot)/${{ parameters.main_project }}.zip'              
              deploymentMethod: 'auto'

  - template: ../common/release-annotations.yml
    parameters:
      environment_name: ${{parameters.environment_name}}
      depends_on: ${{ replace(parameters.main_project, '.', '_') }}          
